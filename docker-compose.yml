version: '3.8'

services:
  # Citus Coordinator
  citus_coordinator:
    image: citusdata/citus:latest
    platform: linux/amd64            # run x86_64 image on ARM hosts
    container_name: citus_coordinator
    environment:
      - POSTGRES_PASSWORD=mypass
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./citus-config.sql:/docker-entrypoint-initdb.d/zzz-citus-config.sql
    networks:
      - citus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  # Citus Worker 1
  citus_worker1:
    image: citusdata/citus:latest
    platform: linux/amd64
    container_name: citus_worker1
    environment:
      - POSTGRES_PASSWORD=mypass
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5433:5432"
    networks:
      - citus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  # Citus Worker 2
  citus_worker2:
    image: citusdata/citus:latest
    platform: linux/amd64
    container_name: citus_worker2
    environment:
      - POSTGRES_PASSWORD=mypass
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5434:5432"
    networks:
      - citus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  # Citus Worker 3
  citus_worker3:
    image: citusdata/citus:latest
    platform: linux/amd64
    container_name: citus_worker3
    environment:
      - POSTGRES_PASSWORD=mypass
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5435:5432"
    networks:
      - citus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  # Citus Worker 4
  citus_worker4:
    image: citusdata/citus:latest
    platform: linux/amd64
    container_name: citus_worker4
    environment:
      - POSTGRES_PASSWORD=mypass
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5436:5432"
    networks:
      - citus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  # PgPool-II (optional; pooling/load balancing to the coordinator)
  pgpool:
    image: bitnami/pgpool:4
    platform: linux/arm64   # bitnami pgpool supports arm64 natively
    container_name: pgpool
    ports:
      - "9999:5432"  # PgPool port (external 9999 -> internal 5432)
      - "9898:9898"  # PCP admin port
    depends_on:
      citus_coordinator:
        condition: service_healthy
    networks:
      - citus_network
    environment:
      - PGPOOL_BACKEND_NODES=0:citus_coordinator:5432
      - PGPOOL_SR_CHECK_USER=postgres
      - PGPOOL_SR_CHECK_PASSWORD=mypass
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=mypass
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=adminpass
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_NUM_INIT_CHILDREN=32
      - PGPOOL_MAX_POOL=4
      - PGPOOL_CHILD_LIFE_TIME=300
      - PGPOOL_CONNECTION_LIFE_TIME=0
      - PGPOOL_CLIENT_IDLE_LIMIT=0
      - PGPOOL_HEALTH_CHECK_PERIOD=10
      - PGPOOL_HEALTH_CHECK_TIMEOUT=20
      - PGPOOL_HEALTH_CHECK_USER=postgres
      - PGPOOL_HEALTH_CHECK_PASSWORD=mypass
      - PGPOOL_HEALTH_CHECK_MAX_RETRIES=3
      - PGPOOL_HEALTH_CHECK_RETRY_DELAY=1
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-p", "5432", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  # Setup service to configure the Citus cluster
  citus_setup:
    image: citusdata/citus:latest
    platform: linux/amd64
    container_name: citus_setup
    depends_on:
      citus_coordinator:
        condition: service_healthy
      citus_worker1:
        condition: service_healthy
      citus_worker2:
        condition: service_healthy
      citus_worker3:
        condition: service_healthy
      citus_worker4:
        condition: service_healthy
    networks:
      - citus_network
    environment:
      - PGPASSWORD=mypass
    command: >
      bash -c "
        echo 'Waiting for all services to be ready...'
        sleep 5
        echo 'Adding worker nodes to cluster...'
        psql -h citus_coordinator -U postgres -d postgres -c \"SELECT * FROM citus_add_node('citus_worker1', 5432);\"
        psql -h citus_coordinator -U postgres -d postgres -c \"SELECT * FROM citus_add_node('citus_worker2', 5432);\"
        psql -h citus_coordinator -U postgres -d postgres -c \"SELECT * FROM citus_add_node('citus_worker3', 5432);\"
        psql -h citus_coordinator -U postgres -d postgres -c \"SELECT * FROM citus_add_node('citus_worker4', 5432);\"
        echo 'Verifying cluster setup...'
        psql -h citus_coordinator -U postgres -d postgres -c \"SELECT * FROM citus_get_active_worker_nodes();\"
        echo 'Citus cluster is ready!'
        echo 'Coordinator: localhost:5432'
        echo 'Worker 1: localhost:5433'
        echo 'Worker 2: localhost:5434'
        echo 'Worker 3: localhost:5435'
        echo 'Worker 4: localhost:5436'
      "
    restart: "no"

networks:
  citus_network:
    driver: bridge

volumes:
  citus_coordinator_data:
  citus_worker1_data:
  citus_worker2_data:
  citus_worker3_data:
  citus_worker4_data:
